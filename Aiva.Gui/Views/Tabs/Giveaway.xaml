<controls:MetroContentControl
    x:Class="Aiva.Gui.Views.Tabs.Giveaway"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:converters="clr-namespace:Aiva.Gui.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:Aiva.Gui.Views.Tabs"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <controls:MetroContentControl.Resources>
        <converters:SliderMinutesToMinHoursConverter x:Key="timeConverter" />
    </controls:MetroContentControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="80" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <ToggleButton Grid.Column="0" IsChecked="{Binding PermitStuff, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Cross}" />
                                                <TextBlock Text="Staff" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightSlateGray" />
                                </Trigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Check}" />
                                                <TextBlock Text="Staff" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightGreen" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton Grid.Column="1" IsChecked="{Binding PermitAdmin, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Cross}" />
                                                <TextBlock Text="Admins" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightSlateGray" />
                                </Trigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Check}" />
                                                <TextBlock Text="Admins" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightGreen" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton Grid.Column="2" IsChecked="{Binding PermitMods, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Cross}" />
                                                <TextBlock Text="Mods" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightSlateGray" />
                                </Trigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Check}" />
                                                <TextBlock Text="Mods" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightGreen" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <ToggleButton Grid.Column="3" IsChecked="{Binding PermitViewers, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Cross}" />
                                                <TextBlock Text="Viewers" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightSlateGray" />
                                </Trigger>

                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <Label Content="{iconPacks:Entypo Kind=Check}" />
                                                <TextBlock Text="Viewers" />
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="LightGreen" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Grid.Resources>
                    <Style TargetType="Border">
                        <Setter Property="Padding" Value="5,5,5,5" />
                    </Style>
                </Grid.Resources>
            </Grid>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <RadioButton
                Grid.Column="0"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="All"
                IsChecked="{Binding All}">
                <RadioButton.Style>
                    <Style BasedOn="{StaticResource MahApps.Metro.Styles.MetroToggleButton}" TargetType="RadioButton">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="LightSlateGray" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="LightGreen" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
            </RadioButton>

            <RadioButton
                Grid.Column="1"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="Active"
                IsChecked="{Binding WithActiveTime}">
                <RadioButton.Style>
                    <Style BasedOn="{StaticResource MahApps.Metro.Styles.MetroToggleButton}" TargetType="RadioButton">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="LightSlateGray" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="LightGreen" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
            </RadioButton>

            <RadioButton
                Grid.Column="2"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center"
                Content="Keyword"
                IsChecked="{Binding WithKeyword}">
                <RadioButton.Style>
                    <Style BasedOn="{StaticResource MahApps.Metro.Styles.MetroToggleButton}" TargetType="RadioButton">
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="LightSlateGray" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="LightGreen" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </RadioButton.Style>
            </RadioButton>
        </Grid>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Margin" Value="0,10,0,10" />
                    </Style>
                </StackPanel.Resources>

                <StackPanel Margin="0,0,0,10" Orientation="Vertical">
                    <TextBlock Text="{Binding ElementName=activeTimeSlider, Path=Value, Converter={StaticResource timeConverter}}" />
                    <Slider
                        Name="activeTimeSlider"
                        Maximum="240"
                        Minimum="1">
                        <Slider.Style>
                            <Style TargetType="Slider">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WithActiveTime}" Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WithActiveTime}" Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Slider.Style>
                    </Slider>
                </StackPanel>

                <Separator />

                <StackPanel Orientation="Vertical">
                    <TextBox controls:TextBoxHelper.AutoWatermark="True" controls:TextBoxHelper.Watermark="Enter keyword ...">
                        <TextBox.Style>
                            <Style BasedOn="{StaticResource MetroTextBox}" TargetType="TextBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WithKeyword}" Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WithKeyword}" Value="False">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <CheckBox IsChecked="{Binding IsCaseSensitive}">
                        <CheckBox.Style>
                            <Style BasedOn="{StaticResource MetroCheckBox}" TargetType="CheckBox">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="Case sensitive" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="Not case sensitive" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Separator />
                    <CheckBox IsChecked="{Binding IsKeywordAntispamActive}">
                        <CheckBox.Style>
                            <Style BasedOn="{StaticResource MetroCheckBox}" TargetType="CheckBox">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="Keyword antispam" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="Spam keyword" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Separator />
                    <CheckBox IsChecked="{Binding UncheckWinner}">
                        <CheckBox.Style>
                            <Style BasedOn="{StaticResource MetroCheckBox}" TargetType="CheckBox">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="Remove winner from list" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="Don't remove winner from list" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Separator />
                    <CheckBox IsChecked="{Binding AnnounceWinner}">
                        <CheckBox.Style>
                            <Style BasedOn="{StaticResource MetroCheckBox}" TargetType="CheckBox">
                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Content" Value="Announce winner" />
                                    </Trigger>
                                    <Trigger Property="IsChecked" Value="False">
                                        <Setter Property="Content" Value="Don't announce winner" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Separator />
                </StackPanel>
            </StackPanel>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="0"
                        Content="{iconPacks:FontAwesome Kind=UndoSolid}"
                        Focusable="False" />

                    <Button
                        Grid.Column="1"
                        BorderBrush="LightGreen"
                        Content="{iconPacks:FontAwesome Kind=DiceSolid}"
                        Focusable="False" />
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <TextBlock
                            FontSize="20"
                            FontStyle="Oblique"
                            Text="Winner" />
                    </Grid>

                    <Grid Grid.Row="1">
                        <Ellipse Width="150" Height="150">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="https://pbs.twimg.com/media/BnQRhIGCEAA_Gnl.jpg" />
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                </Grid>
            </Grid>

            <StackPanel Grid.Column="2" Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Margin" Value="0,10,0,10" />
                    </Style>
                </StackPanel.Resources>

                <StackPanel Margin="0,0,0,10" Orientation="Vertical">
                    <TextBlock Text="Min bits" />
                    <Slider
                        Maximum="100000"
                        Minimum="0"
                        Ticks="0,1,100,1000,10000,100000"
                        Value="{Binding Currency}" />
                </StackPanel>

                <Separator />

                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Subscribed time" />
                    <Slider
                        Maximum="24"
                        Minimum="0"
                        Ticks="0,1,3,6,12,24"
                        Value="{Binding SubscribedTime}" />
                </StackPanel>

                <Separator />

                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Subscriber luck" />
                    <Slider
                        Maximum="10"
                        Minimum="0"
                        Ticks="0,1,2,3,4,5,6,7,8,9,10"
                        Value="{Binding SubscriberLuck}" />
                </StackPanel>

                <Separator />

                <StackPanel>
                    <TextBox
                        controls:TextBoxHelper.AutoWatermark="True"
                        controls:TextBoxHelper.Watermark="naughty,words,like,this"
                        DockPanel.Dock="Top"
                        Text="{Binding ForbiddenWords}" />
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</controls:MetroContentControl>
